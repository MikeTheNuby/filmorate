2023-04-27 12:54:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:54:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 12:55:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Синтаксическая ошибка в выражении SQL "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; ожидалось "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) )"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS like ( user_id INTEGER, film_id INTEGER, PRIMARY KEY (user_id, film_id) ) [42001-214]
2023-04-27 18:27:02 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-27 18:28:05 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-27 18:28:19 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-27 18:28:44 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-04-27 18:31:29 jdbc[3]: exception
java.sql.SQLClientInfoException: Client info name 'ApplicationName' not supported.
	at org.h2.jdbc.JdbcConnection.setClientInfo(JdbcConnection.java:1573)
	at com.intellij.database.remote.jdbc.impl.RemoteConnectionImpl.setClientInfo(RemoteConnectionImpl.java:470)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
